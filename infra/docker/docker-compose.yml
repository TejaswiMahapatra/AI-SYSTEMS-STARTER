services:
  postgres:
    image: postgres:16-alpine
    container_name: ai-systems-postgres
    environment:
      POSTGRES_DB: ai_systems
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-systems-network

  weaviate:
    image: semitechnologies/weaviate:1.24.1
    container_name: ai-systems-weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-systems-network

  redis:
    image: redis:7-alpine
    container_name: ai-systems-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-systems-network

  redisinsight:
    image: redis/redisinsight:latest
    container_name: ai-systems-redisinsight
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    networks:
      - ai-systems-network
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:ai-systems-redis:6379

  minio:
    image: minio/minio:latest
    container_name: ai-systems-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-systems-network

  ollama:
    image: ollama/ollama:latest
    container_name: ai-systems-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ai-systems-network
    # Optional: Uncomment to use GPU (requires nvidia-docker)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  postgres_data:
  weaviate_data:
  redis_data:
  redisinsight_data:
  minio_data:
  ollama_data:

networks:
  ai-systems-network:
    driver: bridge
